{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gmlwo\\\\Desktop\\\\\\uACF0\\uB3CC\\uD76C\\\\\\uCDE8\\uBF40\\\\elice\\\\\\uD504\\uB85C\\uC81D\\uD2B8\\\\portfolio-project\\\\frontend\\\\src\\\\pages\\\\ReadPortfolio.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport axios from \"axios\";\nimport { FullPage, LeftSide, RightSide } from '../styles/MainStyle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReadPortfolio = ({\n  sessionId,\n  readWhos\n}) => {\n  _s();\n\n  const templateStyle = {\n    width: '60vw'\n  };\n  const [awardData, setAwardData] = useState({});\n  const [schoolData, setSchoolData] = useState({});\n  const [certificateData, setCertificateData] = useState({});\n  const [projectData, setProjectData] = useState({});\n  const [profileData, setProfileData] = useState({}); // get Data from Flask\n\n  useEffect(() => {\n    // Default roaded data\n    const fetchPortfolio = async () => {\n      const res = await axios.post('http://localhost:1234/portfolio/main', {\n        \"sessionId\": readWhos\n      });\n      const data = res.data.data.portfolio;\n      setAwardData(data.awards);\n      setSchoolData(data.schools);\n      setCertificateData(data.certificates);\n      setProjectData(data.projects);\n      setProfileData(data.profile);\n    };\n\n    fetchPortfolio();\n  }, [readWhos, setSchoolData, setAwardData, setCertificateData, setProfileData, setProjectData]);\n  return /*#__PURE__*/_jsxDEV(FullPage, {\n    children: [sessionId === null && /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 36\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"My Protfolio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LeftSide, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card text-center\",\n        style: {\n          width: '28vw'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: Array.from(profileData).map(profile => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: profile.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: profile.comments\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 33\n              }, this)]\n            }, `profile_${profile.id}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RightSide, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card text-center\",\n        style: templateStyle,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: Array.from(schoolData).map(school => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: school.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: school.major\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: school.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 41\n              }, this)]\n            }, `school_${school.id}_read`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card text-center\",\n        style: templateStyle,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: Array.from(awardData).map(award => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: award.awards\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: award.awards_details\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 41\n              }, this)]\n            }, `award_${award.id}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card text-center\",\n        style: templateStyle,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: Array.from(projectData).map(project => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: project.project_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: project.project_details\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [project.project_start_date, \" ~ \", project.project_end_date]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 41\n              }, this)]\n            }, `project_${project.id}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card text-center\",\n        style: templateStyle,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: Array.from(certificateData).map(certificate => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: certificate.cert_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: certificate.cert_from\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: certificate.cert_date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 41\n              }, this)]\n            }, `certificate_${certificate.id}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ReadPortfolio, \"7MFZhuNthL87POfmTmbeMNh0YE4=\");\n\n_c = ReadPortfolio;\nexport default ReadPortfolio;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadPortfolio\");","map":{"version":3,"sources":["C:/Users/gmlwo/Desktop/곰돌희/취뽀/elice/프로젝트/portfolio-project/frontend/src/pages/ReadPortfolio.js"],"names":["React","useState","useEffect","Redirect","axios","FullPage","LeftSide","RightSide","ReadPortfolio","sessionId","readWhos","templateStyle","width","awardData","setAwardData","schoolData","setSchoolData","certificateData","setCertificateData","projectData","setProjectData","profileData","setProfileData","fetchPortfolio","res","post","data","portfolio","awards","schools","certificates","projects","profile","Array","from","map","name","comments","id","school","major","status","award","awards_details","project","project_name","project_details","project_start_date","project_end_date","certificate","cert_name","cert_from","cert_date"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,SAA7B,QAA8C,qBAA9C;;;AAGA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA6B;AAAA;;AAC/C,QAAMC,aAAa,GAAuC;AAACC,IAAAA,KAAK,EAAE;AAAR,GAA1D;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAAoDb,QAAQ,CAAC,EAAD,CAAlE;AACA,QAAM,CAACc,UAAD,EAAaC,aAAb,IAAoDf,QAAQ,CAAC,EAAD,CAAlE;AACA,QAAM,CAACgB,eAAD,EAAkBC,kBAAlB,IAAoDjB,QAAQ,CAAC,EAAD,CAAlE;AACA,QAAM,CAACkB,WAAD,EAAcC,cAAd,IAAoDnB,QAAQ,CAAC,EAAD,CAAlE;AACA,QAAM,CAACoB,WAAD,EAAcC,cAAd,IAAoDrB,QAAQ,CAAC,EAAD,CAAlE,CAN+C,CAQ/C;;AACAC,EAAAA,SAAS,CAAC,MAAI;AACV;AACA,UAAMqB,cAAc,GAAG,YAAY;AAC/B,YAAMC,GAAG,GAAG,MAAMpB,KAAK,CAACqB,IAAN,CAAW,sCAAX,EAAmD;AAAC,qBAAYf;AAAb,OAAnD,CAAlB;AACA,YAAMgB,IAAI,GAAGF,GAAG,CAACE,IAAJ,CAASA,IAAT,CAAcC,SAA3B;AACAb,MAAAA,YAAY,CAACY,IAAI,CAACE,MAAN,CAAZ;AACAZ,MAAAA,aAAa,CAACU,IAAI,CAACG,OAAN,CAAb;AACAX,MAAAA,kBAAkB,CAACQ,IAAI,CAACI,YAAN,CAAlB;AACAV,MAAAA,cAAc,CAACM,IAAI,CAACK,QAAN,CAAd;AACAT,MAAAA,cAAc,CAACI,IAAI,CAACM,OAAN,CAAd;AACH,KARD;;AASAT,IAAAA,cAAc;AAEjB,GAbQ,EAaN,CAACb,QAAD,EAAWM,aAAX,EAA0BF,YAA1B,EAAwCI,kBAAxC,EAA4DI,cAA5D,EAA4EF,cAA5E,CAbM,CAAT;AAeA,sBAEI,QAAC,QAAD;AAAA,eACKX,SAAS,KAAK,IAAd,iBAAsB,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAD3B,eAEI;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,QAAD;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAkC,QAAA,KAAK,EAAE;AAACG,UAAAA,KAAK,EAAE;AAAR,SAAzC;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,oBAEIqB,KAAK,CAACC,IAAN,CAAWb,WAAX,EAAwBc,GAAxB,CAA4BH,OAAO,IAAI;AACvC,gCACI;AAAA,sCACI;AAAA,0BAAKA,OAAO,CAACI;AAAb;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA,0BAAIJ,OAAO,CAACK;AAAZ;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA,eAAW,WAAUL,OAAO,CAACM,EAAG,EAAhC;AAAA;AAAA;AAAA;AAAA,oBADJ;AAMC,WAPD;AAFJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ,eAoBI,QAAC,SAAD;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAkC,QAAA,KAAK,EAAE3B,aAAzC;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,oBAEQsB,KAAK,CAACC,IAAN,CAAWnB,UAAX,EAAuBoB,GAAvB,CAA2BI,MAAM,IAAI;AACjC,gCACI;AAAA,sCACI;AAAA,0BAAKA,MAAM,CAACH;AAAZ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA,0BAAKG,MAAM,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAA,0BAAID,MAAM,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,sBAHJ;AAAA,eAAW,UAASF,MAAM,CAACD,EAAG,OAA9B;AAAA;AAAA;AAAA;AAAA,oBADJ;AAQH,WATD;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAkBI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAkC,QAAA,KAAK,EAAE3B,aAAzC;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,oBAEQsB,KAAK,CAACC,IAAN,CAAWrB,SAAX,EAAsBsB,GAAtB,CAA0BO,KAAK,IAAI;AAC/B,gCACI;AAAA,sCACI;AAAA,0BAAKA,KAAK,CAACd;AAAX;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA,0BAAIc,KAAK,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA,eAAW,SAAQD,KAAK,CAACJ,EAAG,EAA5B;AAAA;AAAA;AAAA;AAAA,oBADJ;AAOH,WARD;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAlBJ,eAkCI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAkC,QAAA,KAAK,EAAE3B,aAAzC;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,oBAEQsB,KAAK,CAACC,IAAN,CAAWf,WAAX,EAAwBgB,GAAxB,CAA4BS,OAAO,IAAI;AACnC,gCACI;AAAA,sCACI;AAAA,0BAAKA,OAAO,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA,0BAAKD,OAAO,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAA,2BAAIF,OAAO,CAACG,kBAAZ,SAAmCH,OAAO,CAACI,gBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ;AAAA,eAAW,WAAUJ,OAAO,CAACN,EAAG,EAAhC;AAAA;AAAA;AAAA;AAAA,oBADJ;AAOH,WARD;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAlCJ,eAkDI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAkC,QAAA,KAAK,EAAE3B,aAAzC;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,oBAEQsB,KAAK,CAACC,IAAN,CAAWjB,eAAX,EAA4BkB,GAA5B,CAAgCc,WAAW,IAAI;AAC3C,gCACI;AAAA,sCACI;AAAA,0BAAKA,WAAW,CAACC;AAAjB;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA,0BAAKD,WAAW,CAACE;AAAjB;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAA,0BAAIF,WAAW,CAACG;AAAhB;AAAA;AAAA;AAAA;AAAA,sBAHJ;AAAA,eAAW,eAAcH,WAAW,CAACX,EAAG,EAAxC;AAAA;AAAA;AAAA;AAAA,oBADJ;AAQH,WATD;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAlDJ;AAAA;AAAA;AAAA;AAAA;AAAA,YApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AA4FH,CApHD;;GAAM9B,a;;KAAAA,a;AAsHN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport { FullPage, LeftSide, RightSide } from '../styles/MainStyle';\r\n\r\n\r\nconst ReadPortfolio = ({ sessionId, readWhos }) => {\r\n    const templateStyle                                     = {width: '60vw'}\r\n    const [awardData, setAwardData]                         = useState({});\r\n    const [schoolData, setSchoolData]                       = useState({});\r\n    const [certificateData, setCertificateData]             = useState({});\r\n    const [projectData, setProjectData]                     = useState({});\r\n    const [profileData, setProfileData]                     = useState({});\r\n    \r\n    // get Data from Flask\r\n    useEffect(()=>{\r\n        // Default roaded data\r\n        const fetchPortfolio = async () => {\r\n            const res = await axios.post('http://localhost:1234/portfolio/main', {\"sessionId\":readWhos});\r\n            const data = res.data.data.portfolio;\r\n            setAwardData(data.awards);\r\n            setSchoolData(data.schools);\r\n            setCertificateData(data.certificates);\r\n            setProjectData(data.projects);\r\n            setProfileData(data.profile);\r\n        }\r\n        fetchPortfolio();\r\n\r\n    }, [readWhos, setSchoolData, setAwardData, setCertificateData, setProfileData, setProjectData]);\r\n\r\n    return (\r\n        \r\n        <FullPage>\r\n            {sessionId === null && <Redirect to=\"/login\" />}\r\n            <h1 className=\"text-center\">My Protfolio</h1>\r\n            <br />\r\n            <LeftSide>\r\n                <div className=\"card text-center\" style={{width: '28vw'}}>\r\n                    <div className=\"card-body\">\r\n                    {\r\n                        Array.from(profileData).map(profile => {\r\n                        return (\r\n                            <div key={`profile_${profile.id}`}>\r\n                                <h5>{profile.name}</h5>\r\n                                <p>{profile.comments}</p>\r\n                            </div>\r\n                        )\r\n                        })\r\n                    }\r\n                    </div>\r\n                </div>\r\n            </LeftSide>\r\n            <RightSide>\r\n                <div className=\"card text-center\" style={templateStyle}>\r\n                    <div className=\"card-body\">\r\n                        {\r\n                            Array.from(schoolData).map(school => {\r\n                                return (\r\n                                    <div key={`school_${school.id}_read`}>\r\n                                        <h5>{school.name}</h5>\r\n                                        <h6>{school.major}</h6>\r\n                                        <p>{school.status}</p>\r\n                                    </div>\r\n                                    \r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div> \r\n\r\n                <div className=\"card text-center\" style={templateStyle}>\r\n                    <div className=\"card-body\">\r\n                        {\r\n                            Array.from(awardData).map(award => {\r\n                                return (\r\n                                    <div key={`award_${award.id}`}>\r\n                                        <h5>{award.awards}</h5>\r\n                                        <p>{award.awards_details}</p>\r\n                                    </div>\r\n                                    \r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"card text-center\" style={templateStyle}>\r\n                    <div className=\"card-body\">\r\n                        {\r\n                            Array.from(projectData).map(project => {\r\n                                return (\r\n                                    <div key={`project_${project.id}`}>\r\n                                        <h5>{project.project_name}</h5>\r\n                                        <h6>{project.project_details}</h6>\r\n                                        <p>{project.project_start_date} ~ {project.project_end_date}</p>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"card text-center\" style={templateStyle}>\r\n                    <div className=\"card-body\">\r\n                        {\r\n                            Array.from(certificateData).map(certificate => {\r\n                                return (\r\n                                    <div key={`certificate_${certificate.id}`}>\r\n                                        <h5>{certificate.cert_name}</h5>\r\n                                        <h6>{certificate.cert_from}</h6>\r\n                                        <p>{certificate.cert_date}</p>\r\n                                    </div>\r\n                                    \r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </RightSide>\r\n        </FullPage>\r\n    );\r\n    \r\n}\r\n\r\nexport default ReadPortfolio;"]},"metadata":{},"sourceType":"module"}