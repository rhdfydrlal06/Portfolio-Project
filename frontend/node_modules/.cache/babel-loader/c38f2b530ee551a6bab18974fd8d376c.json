{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gmlwo\\\\Desktop\\\\elice\\\\\\uD504\\uB85C\\uC81D\\uD2B8\\\\portfolio-project\\\\frontend\\\\src\\\\components\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const [portfolio, setPortfolio] = useState();\n\n  const logoutRequest = async () => {\n    try {\n      await axios.get(\"http://localhost:1234/api/auth/logout\");\n      window.sessionStorage.clear();\n    } catch (e) {\n      alert(e);\n    }\n  }; // const { awards, schools, certificates, projects } = portfolio;\n\n\n  useEffect(() => {\n    const fetchPortfolio = async () => {\n      const res = await axios.get('http://localhost:1234/main');\n      console.log(res);\n      debugger;\n      setPortfolio(res.data.portfolio);\n    }; // // api data 가공\n    // const makeData = (items) => {\n    //     const arr = items.reduce((acc, cur) => {\n    //         const currentDate = new Date(cur.Date);\n    //         const year = currentDate.getFullYear();\n    //         const month = currentDate.getMonth();\n    //         const date = currentDate.getDate();\n    //         const confirmed = cur.Confirmed;\n    //         const active = cur.Active;\n    //         const death = cur.Deaths;\n    //         const recovered = cur.Recovered;\n    //         const findItem = acc.find(a=> a.year === year && a.month === month);\n    //         if(!findItem){\n    //             acc.push({year, month, date, confirmed, active, death, recovered})\n    //         }\n    //         if(findItem && findItem < date){\n    //             findItem.confirmed = confirmed;\n    //             findItem.active = active;\n    //             findItem.death = death;\n    //             findItem.recovered = recovered;\n    //             findItem.year = year;\n    //             findItem.month = month;\n    //             findItem.date = date;\n    //         }\n    //         console.log(cur);\n    //         return acc;\n    //     }, [])\n    //     const labels = arr.map(a=> `${a.year}년 ${a.month + 1}월`);\n    //     setConfirmedData({\n    //         labels,\n    //         datasets: [\n    //             { \n    //                 label: \"국내 누적 확진자\",\n    //                 backgroundColor: \"salmon\",\n    //                 borderColor: \"salmon\",\n    //                 fill: true,\n    //                 data: arr.map(a=>a.confirmed)\n    //             },\n    //         ]\n    //     });\n    //     setQuarantinedData({\n    //         labels,\n    //         datasets: [\n    //             { \n    //                 label: \"월별 격리자 현황\",\n    //                 backgroundColor: \"salmon\",\n    //                 borderColor: \"salmon\",\n    //                 fill: false,\n    //                 data: arr.map(a=>a.active)\n    //             },\n    //         ]\n    //     });\n    //     const lastMonth = arr[arr.length - 1]\n    //     setComparedData({\n    //         labels: [\"확진자\", \"격리해제\", \"사망\"],\n    //         datasets: [\n    //             { \n    //                 label: \"누적 확진, 해제, 사망 비율\",\n    //                 backgroundColor: ['#ff3d67', \"#059bff\", \"#ffc233\"],\n    //                 borderColor:  ['#ff3d67', \"#059bff\", \"#ffc233\"],\n    //                 fill: false,\n    //                 data: [lastMonth.confirmed, lastMonth.recovered, lastMonth.death]\n    //             },\n    //         ]\n    //     });\n    // }\n\n\n    fetchPortfolio();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uBA54\\uC778\\uD398\\uC774\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          logoutRequest();\n        },\n        children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"school-portfolio\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD559\\uB825\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), schools.map(school => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: school.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: school.major\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: school.status === 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\uC7AC\\uD559\\uC911\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 56\n            }, this) : school.status === 2 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\uD559\\uC0AC\\uC878\\uC5C5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 62\n            }, this) : school.status === 3 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\uC11D\\uC0AC\\uC878\\uC5C5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 66\n            }, this) : school.status === 4 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\uBC15\\uC0AC\\uC878\\uC5C5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 70\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 33\n          }, this)]\n        }, `school_${school.id}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 29\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"awards-portfolio\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC218\\uC0C1\\uC774\\uB825\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), awards.map(award => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: award.awards\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: award.awards_details\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 33\n          }, this)]\n        }, `award_${award.id}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 29\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects-portfolio\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD504\\uB85C\\uC81D\\uD2B8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), projects.map(project => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: project.project_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: project.project_details\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 33\n          }, this)]\n        }, `project_${project.id}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 29\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"certificates-portfolio\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC790\\uACA9\\uC99D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), certificates.map(certificate => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: certificate.cert_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: certificate.cert_from\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: certificate.cert_date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 33\n          }, this)]\n        }, `certificate_${certificate.id}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 29\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Main, \"fEvy8uYVhNIpT6U3NtCGFjZSEl8=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/gmlwo/Desktop/elice/프로젝트/portfolio-project/frontend/src/components/Main.js"],"names":["React","useState","useEffect","axios","Main","portfolio","setPortfolio","logoutRequest","get","window","sessionStorage","clear","e","alert","fetchPortfolio","res","console","log","data","schools","map","school","name","major","status","id","awards","award","awards_details","projects","project","project_name","project_details","certificates","certificate","cert_name","cert_from","cert_date"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\n\r\nconst Main = () => {\r\n    const [portfolio, setPortfolio] = useState();\r\n\r\n    const logoutRequest = async () => {\r\n        try {\r\n            await axios.get(\"http://localhost:1234/api/auth/logout\");\r\n            window.sessionStorage.clear();\r\n        }\r\n        catch (e) {\r\n            alert(e);\r\n        }\r\n    }\r\n    // const { awards, schools, certificates, projects } = portfolio;\r\n    useEffect(()=>{\r\n        const fetchPortfolio = async () => {\r\n            const res = await axios.get('http://localhost:1234/main');\r\n            console.log(res);\r\n            debugger;\r\n            setPortfolio(res.data.portfolio);\r\n        }\r\n        // // api data 가공\r\n        // const makeData = (items) => {\r\n        //     const arr = items.reduce((acc, cur) => {\r\n        //         const currentDate = new Date(cur.Date);\r\n        //         const year = currentDate.getFullYear();\r\n        //         const month = currentDate.getMonth();\r\n        //         const date = currentDate.getDate();\r\n\r\n        //         const confirmed = cur.Confirmed;\r\n        //         const active = cur.Active;\r\n        //         const death = cur.Deaths;\r\n        //         const recovered = cur.Recovered;\r\n                \r\n        //         const findItem = acc.find(a=> a.year === year && a.month === month);\r\n\r\n        //         if(!findItem){\r\n        //             acc.push({year, month, date, confirmed, active, death, recovered})\r\n        //         }\r\n                \r\n        //         if(findItem && findItem < date){\r\n        //             findItem.confirmed = confirmed;\r\n        //             findItem.active = active;\r\n        //             findItem.death = death;\r\n        //             findItem.recovered = recovered;\r\n        //             findItem.year = year;\r\n        //             findItem.month = month;\r\n        //             findItem.date = date;\r\n\r\n        //         }\r\n        //         console.log(cur);\r\n        //         return acc;\r\n\r\n        //     }, [])\r\n\r\n        //     const labels = arr.map(a=> `${a.year}년 ${a.month + 1}월`);\r\n        //     setConfirmedData({\r\n        //         labels,\r\n        //         datasets: [\r\n        //             { \r\n        //                 label: \"국내 누적 확진자\",\r\n        //                 backgroundColor: \"salmon\",\r\n        //                 borderColor: \"salmon\",\r\n        //                 fill: true,\r\n        //                 data: arr.map(a=>a.confirmed)\r\n        //             },\r\n        //         ]\r\n        \r\n        //     });\r\n        //     setQuarantinedData({\r\n        //         labels,\r\n        //         datasets: [\r\n        //             { \r\n        //                 label: \"월별 격리자 현황\",\r\n        //                 backgroundColor: \"salmon\",\r\n        //                 borderColor: \"salmon\",\r\n        //                 fill: false,\r\n        //                 data: arr.map(a=>a.active)\r\n        //             },\r\n        //         ]\r\n        \r\n        //     });\r\n        //     const lastMonth = arr[arr.length - 1]\r\n        //     setComparedData({\r\n        //         labels: [\"확진자\", \"격리해제\", \"사망\"],\r\n        //         datasets: [\r\n        //             { \r\n        //                 label: \"누적 확진, 해제, 사망 비율\",\r\n        //                 backgroundColor: ['#ff3d67', \"#059bff\", \"#ffc233\"],\r\n        //                 borderColor:  ['#ff3d67', \"#059bff\", \"#ffc233\"],\r\n        //                 fill: false,\r\n        //                 data: [lastMonth.confirmed, lastMonth.recovered, lastMonth.death]\r\n        //             },\r\n        //         ]\r\n        \r\n        //     });\r\n        // }\r\n\r\n        fetchPortfolio();\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <h1>메인페이지</h1>\r\n            <p><button onClick={() => {logoutRequest()}}>로그아웃</button></p>\r\n            <div className=\"school-portfolio\">\r\n                <h3>학력</h3>\r\n                {\r\n                    schools.map(school => {\r\n                        return (\r\n                            <div key={`school_${school.id}`}>\r\n                                <p>{school.name}</p>\r\n                                <p>{school.major}</p>\r\n                                <div>\r\n                                {school.status === 1 ? <p>재학중</p>\r\n                                    : (school.status === 2 ? <p>학사졸업</p>\r\n                                        : (school.status === 3 ? <p>석사졸업</p>\r\n                                            : (school.status === 4 ? <p>박사졸업</p>\r\n                                                : null\r\n                                            )\r\n                                        )\r\n                                    )\r\n                                }\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            <div className=\"awards-portfolio\">\r\n                <h3>수상이력</h3>\r\n                {\r\n                    awards.map(award => {\r\n                        return (\r\n                            <div key={`award_${award.id}`}>\r\n                                <p>{award.awards}</p>\r\n                                <p>{award.awards_details}</p>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            <div className=\"projects-portfolio\">\r\n                <h3>프로젝트</h3>\r\n                {\r\n                    projects.map(project => {\r\n                        return (\r\n                            <div key={`project_${project.id}`}>\r\n                                <p>{project.project_name}</p>\r\n                                <p>{project.project_details}</p>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            <div className=\"certificates-portfolio\">\r\n                <h3>자격증</h3>\r\n                {\r\n                    certificates.map(certificate => {\r\n                        return (\r\n                            <div key={`certificate_${certificate.id}`}>\r\n                                <p>{certificate.cert_name}</p>\r\n                                <p>{certificate.cert_from}</p>\r\n                                <p>{certificate.cert_date}</p>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}