{"version":3,"sources":["Env.js","components/Header.js","pages/Login.js","components/portfolio/Awards.js","components/portfolio/Schools.js","components/portfolio/Projects.js","components/portfolio/Certificates.js","components/portfolio/Profile.js","styles/MainStyle.js","pages/Main.js","pages/Signup.js","pages/Network.js","pages/ReadPortfolio.js","pages/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["BACKEND_URL","Header","sessionId","setSessionId","history","useHistory","logoutRequest","a","axios","get","window","sessionStorage","clear","push","alert","className","href","id","to","onClick","Login","useState","email","setEmail","password","setPassword","requestLogin","post","res","data","result","user_id","user_data","setItem","message","console","log","onSubmit","e","preventDefault","handleLoginSubmit","type","placeholder","onChange","target","value","htmlFor","EditAward","setEditAward","isClicked","setAwardData","awards","award","setAward","awards_details","awardDetail","setAwardDetail","award_id","requestSaveAward","requestDeleteAward","stopPropagation","defaultValue","role","aria-label","Awards","awardData","editAward","handleEditAwards","setIsClicked","requestAddAward","Array","from","map","prevState","EditSchool","setEditSchool","setSchoolData","name","setName","major","setMajor","status","setStatus","school_id","requestSaveSchool","requestDeleteSchool","schools","Schools","schoolData","editSchool","handleEditSchools","requestAddSchool","school","EditProject","setEditProject","setProjectData","project_name","project_details","details","setDetails","project_start_date","startDate","setStartDate","project_end_date","endDate","setEndDate","project_id","requestSaveProject","requestDeleteProject","projects","Projects","projectData","editProject","handleEditProjects","requestAddProject","project","EditCertificate","setEditCertificate","setCertificateData","cert_name","cert_from","setFrom","cert_date","date","setDate","certificate_id","requestSaveCertificate","requestDeleteDertificate","certificates","Certificates","certificateData","editCertificate","handleEditCertificates","requestAddCertificate","certificate","EditProfile","setEditProfile","comments","setComments","profile_id","requestSaveProfile","Profile","profileData","editProfile","handleEditProfile","profile","FullPage","styled","div","LeftSide","RightSide","Main","templateStyle","width","setProfileData","isSchoolClicked","setIsSchoolClicked","isAwardClicked","setIsAwardClicked","isCertificateClicked","setIsCertificateClicked","isProjectClicked","setIsProjectClicked","isProfileClicked","setIsProfileClicked","useEffect","portfolio","fetchPortfolio","fetchProfile","fetchAwards","fetchSchools","fetchCertificates","fetchProjects","style","Signup","checkPassword","setCheckPassword","requestSignUp","handleSignUpSubmit","ProfileCard","setReadWhos","Card","Body","Title","Text","Button","variant","Network","serach","setSearch","userData","setUserData","users","fetchUser","aria-describedby","user","CardGroup","ReadPortfolio","readWhos","NotFound","textAlign","Image","src","fluid","App","getItem","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4563443.chunk.js","sourcesContent":["export const BACKEND_URL = \"http://kdt-1st-project-75.koreacentral.cloudapp.azure.com/api\"\r\n","import React from 'react';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport {BACKEND_URL} from \"../Env\"\r\n\r\nconst Header = ({ sessionId, setSessionId }) => {\r\n    const history = useHistory();\r\n    const logoutRequest = async () => {\r\n        try {\r\n            await axios.get(BACKEND_URL+'/auth/logout');\r\n            window.sessionStorage.clear();\r\n            setSessionId(null);\r\n            history.push(\"/login\");\r\n        }\r\n        catch (e) {\r\n            alert(e);\r\n        }\r\n    }\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#!\">RacerIn</a>\r\n                { sessionId && (\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                        <ul className=\"navbar-nav\">\r\n                            <li className=\"nav-item\">\r\n                                <NavLink className=\"nav-link\" to=\"/\">메인</NavLink>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink className=\"nav-link\" to=\"/network\">네트워크</NavLink>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" onClick={logoutRequest} href=\"#!\">로그아웃</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>  \r\n                )}\r\n            </div>\r\n        </nav>\r\n    )\r\n\r\n}\r\n\r\nexport default Header","import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {BACKEND_URL} from \"../Env\";\r\n\r\nconst Login = ({ setSessionId }) => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const history = useHistory();\r\n    \r\n    const requestLogin = async () => {\r\n        try {\r\n            const res = await axios.post(\r\n                BACKEND_URL + '/auth/login',\r\n                { email, password }\r\n            );\r\n            if (res.data.result===\"success\") {\r\n                const user_id = res.data.data.user_data.id;\r\n                setSessionId(user_id);\r\n                window.sessionStorage.setItem(\"id\", user_id);\r\n                history.push(\"/\");\r\n            } else{\r\n                alert(res.data.message);\r\n                history.push(\"/\");\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    const handleLoginSubmit = (e) => {\r\n        e.preventDefault();\r\n        requestLogin();\r\n    }\r\n\r\n        return (\r\n            <div className=\"text-center\">\r\n                <main className=\"form-signin\">\r\n                    <form onSubmit={e =>handleLoginSubmit(e)}>\r\n                        <h1 className=\"h3 mb-3 fw-normal\">Please login</h1>\r\n                        <div className=\"form-floating\">\r\n                            <input type=\"email\" className=\"form-control\" id=\"floatingInput\" placeholder=\"name@example.com\" onChange={e => setEmail(e.target.value)} />\r\n                            <label htmlFor=\"floatingInput\">Email address</label>\r\n                        </div>\r\n                        <div className=\"form-floating\">\r\n                            <input type=\"password\" className=\"form-control\" id=\"floatingPassword\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)} />\r\n                            <label htmlFor=\"floatingPassword\">Password</label>\r\n                        </div>\r\n                        <button className=\"w-100 btn btn-lg btn-secondary\" type=\"submit\">Sign in</button>\r\n                        <button type=\"button\" className=\"w-100 btn btn-lg btn-light\" onClick={() => history.push(\"/signup\")}>회원가입하기</button>\r\n                        <p className=\"mt-5 mb-3 text-muted\">&copy; 2021 RacerIn Co. all rights reserved.</p>\r\n                    </form>\r\n                </main>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Login;","import React, {useState} from 'react';\r\nimport axios from \"axios\";\r\nimport {BACKEND_URL} from \"../../Env\";\r\n\r\nconst EditAward = ({ data, setEditAward, isClicked, sessionId, setAwardData }) => {\r\n    const [award, setAward]                 = useState(data.awards);\r\n    const [awardDetail,setAwardDetail]      = useState(data.awards_details);\r\n    const award_id                          = data.id;\r\n\r\n    const requestSaveAward = async () => {\r\n        try {\r\n            await axios.post(\r\n                BACKEND_URL + '/edit/award',\r\n                { award, awardDetail, award_id }\r\n            );\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    const requestDeleteAward = async (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        try {\r\n            await axios.post(\r\n                BACKEND_URL + '/delete/award',\r\n                { award_id }\r\n            );\r\n            const res = await axios.post(BACKEND_URL + '/portfolio/main/awards', {sessionId});\r\n            const data = res.data.data.awards;\r\n            setAwardData(data);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    if (isClicked){\r\n        requestSaveAward();\r\n        setEditAward(false);\r\n    }\r\n\r\n    return (\r\n        <main className=\"form-input\">\r\n            <div className=\"form-floating\">\r\n                <input type=\"text\" className=\"form-control\"  placeholder=\"수상 이름\" defaultValue={award} onChange={e => setAward(e.target.value)} />\r\n                <label htmlFor=\"floatingInput\">수상 이름</label>\r\n            </div>\r\n            <div className=\"form-floating\">\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"수상 내용\" defaultValue={awardDetail} onChange={e => setAwardDetail(e.target.value)} />\r\n                <label htmlFor=\"floatingInput\">수상 내용</label>\r\n            </div>\r\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Basic outlined example\">\r\n                <button className=\"btn btn-outline-primary\" onClick={requestDeleteAward} type=\"button\">삭제</button>\r\n            </div>\r\n        </main>\r\n    );\r\n    \r\n}\r\nconst Awards = ({ awardData, editAward, setEditAward, handleEditAwards, isClicked, setIsClicked, setAwardData, sessionId }) => {\r\n    const handleAwardSubmit = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        setIsClicked(prevState => (!prevState));\r\n    }\r\n    const requestAddAward = async (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        await axios.post(BACKEND_URL + '/add/award', {sessionId});\r\n        const res = await axios.post(BACKEND_URL + '/portfolio/main/awards', {sessionId});\r\n            const data = res.data.data.awards;\r\n            setAwardData(data);\r\n        \r\n    }\r\n    return (\r\n        <div className=\"awards-portfolio\">\r\n            <h3>수상이력</h3>\r\n            {\r\n                editAward ?\r\n                Array.from(awardData).map(award => {\r\n                    return (\r\n                        <div key={`award_${award.id}_edit`}>\r\n                            <EditAward data={award} setEditAward={setEditAward} isClicked={isClicked} sessionId={sessionId} setAwardData={setAwardData} />\r\n                        </div>\r\n                    )\r\n                }) : \r\n                Array.from(awardData).map(award => {\r\n                    return (\r\n                        <div key={`award_${award.id}`}>\r\n                            <h5>{award.awards}</h5>\r\n                            <p>{award.awards_details}</p>\r\n                        </div>\r\n                        \r\n                    )\r\n                })\r\n            }\r\n            {editAward ?\r\n            <div>\r\n                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic outlined example\">\r\n                    <button className=\"btn btn-outline-primary\" onClick={requestAddAward} type=\"button\">추가</button>\r\n                </div>\r\n                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic outlined example\">\r\n                    <button className=\"btn btn-outline-primary\" onClick={handleAwardSubmit} type=\"submit\">완료</button>\r\n                </div>\r\n            </div>:\r\n                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic outlined example\">\r\n                    <button className=\"btn btn-outline-primary\" onClick={handleEditAwards} type=\"button\">수정</button>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default Awards;","import React, {useState} from 'react';\r\nimport axios from \"axios\";\r\nimport {BACKEND_URL} from \"../../Env\";\r\n\r\nconst EditSchool = ({ data, setEditSchool, isClicked, sessionId, setSchoolData }) => {\r\n    const [name, setName]       = useState(data.name);\r\n    const [major,setMajor]      = useState(data.major);\r\n    const [status, setStatus]   = useState(data.status);\r\n    const school_id             = data.id;\r\n\r\n    const requestSaveSchool = async () => {\r\n        try {\r\n            await axios.post(\r\n                BACKEND_URL + '/edit/school',\r\n                { name, major, status, school_id }\r\n            );\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    const requestDeleteSchool = async (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        try {\r\n            await axios.post(\r\n                BACKEND_URL + '/delete/school',\r\n                { school_id }\r\n            );\r\n            const res = await axios.post(BACKEND_URL + '/portfolio/main/schools', {sessionId});\r\n            const data = res.data.data.schools;\r\n            setSchoolData(data);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n\r\n    if (isClicked){\r\n        setEditSchool(false);\r\n        requestSaveSchool();\r\n    }\r\n\r\n    return (\r\n        <main className=\"form-input\">\r\n            <div className=\"form-floating\">\r\n                <input type=\"text\" className=\"form-control\"  placeholder=\"학교이름\" defaultValue={name} onChange={e => setName(e.target.value)} />\r\n                <label htmlFor=\"floatingInput\">학교이름</label>\r\n            </div>\r\n            <div className=\"form-floating\">\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"전공\" defaultValue={major} onChange={e => setMajor(e.target.value)} />\r\n                <label htmlFor=\"floatingInput\">전공</label>\r\n            </div>\r\n            <div className=\"form-floating\">\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"상태\" defaultValue={status} onChange={e => setStatus(e.target.value)} />\r\n                <label htmlFor=\"floatingInput\">상태</label>\r\n            </div>\r\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Basic outlined example\">\r\n                <button className=\"btn btn-outline-primary\" onClick={requestDeleteSchool} type=\"button\">삭제</button>\r\n            </div>\r\n        </main>\r\n    );\r\n    \r\n}\r\nconst Schools = ({ schoolData, editSchool, setEditSchool, handleEditSchools, isClicked, setIsClicked, setSchoolData, sessionId  }) => {\r\n    const handleSchoolSubmit = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        setIsClicked(prevState => (!prevState));\r\n    }\r\n    const requestAddSchool = async (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        await axios.post(BACKEND_URL + '/add/school', {sessionId});\r\n        const res = await axios.post(BACKEND_URL + '/portfolio/main/schools', {sessionId});\r\n            const data = res.data.data.schools;\r\n            setSchoolData(data);\r\n        \r\n    }\r\n    return (\r\n        <div className=\"school-portfolio\">\r\n            <h3>학력</h3>\r\n            {\r\n                editSchool ?\r\n                Array.from(schoolData).map(school => {\r\n                    return (\r\n                        <div key={`school_${school.id}_edit`}>\r\n                            <EditSchool data={school} setEditSchool={setEditSchool} isClicked={isClicked} setSchoolData={setSchoolData} sessionId={sessionId}  />\r\n                        </div>\r\n                    )\r\n                }) : \r\n                Array.from(schoolData).map(school => {\r\n                    return (\r\n                        <div key={`school_${school.id}_read`}>\r\n                            <h5>{school.name}</h5>\r\n                            <h6>{school.major}</h6>\r\n                            <p>{school.status}</p>\r\n                        </div>\r\n                        \r\n                    )\r\n                })\r\n            }\r\n            {\r\n                editSchool ?\r\n                    <div>\r\n                        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic outlined example\">\r\n                            <button className=\"btn btn-outline-primary\" onClick={requestAddSchool} type=\"button\">추가</button>\r\n                        </div>\r\n                        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic outlined example\">\r\n                            <button className=\"btn btn-outline-primary\" onClick={handleSchoolSubmit} type=\"submit\">완료</button>\r\n                        </div>\r\n                    </div> :\r\n                    <div className=\"btn-group\" role=\"group\" aria-label=\"Basic outlined example\">\r\n                        <button className=\"btn btn-outline-primary\" onClick={handleEditSchools} type=\"button\">수정</button>\r\n                    </div>\r\n            }\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default Schools;","import React, {useState} from 'react';\r\nimport axios from \"axios\";\r\nimport {BACKEND_URL} from \"../../Env\";\r\n\r\nconst EditProject = ({ data, setEditProject, isClicked, setProjectData, sessionId }) => {\r\n    const [name, setName]               = useState(data.project_name);\r\n    const [details,setDetails]          = useState(data.project_details);\r\n    const [startDate,setStartDate]      = useState(data.project_start_date);\r\n    const [endDate,setEndDate]          = useState(data.project_end_date);\r\n    const project_id                    = data.id;\r\n\r\n    const requestSaveProject = async () => {\r\n        try {\r\n            await axios.post(\r\n                BACKEND_URL + '/edit/project',\r\n                { name, details, startDate, endDate, project_id }\r\n            );\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    const requestDeleteProject = async (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        try {\r\n            await axios.post(\r\n                BACKEND_URL + '/delete/project',\r\n                { project_id }\r\n            );\r\n            const res = await axios.post(BACKEND_URL + '/portfolio/main/projects', {sessionId});\r\n            const data = res.data.data.projects;\r\n            setProjectData(data);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n\r\n    if (isClicked){\r\n        requestSaveProject();\r\n        setEditProject(false);\r\n    }\r\n\r\n    return (\r\n        <main className=\"form-input\">\r\n            <div className=\"form-floating\">\r\n                <input type=\"text\" className=\"form-control\"  placeholder=\"프로젝트 주제\" defaultValue={name} onChange={e => setName(e.target.value)} />\r\n                <label htmlFor=\"floatingInput\">프로젝트 주제</label>\r\n            </div>\r\n            <div className=\"form-floating\">\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"프로젝트 내용\" defaultValue={details} onChange={e => setDetails(e.target.value)} />\r\n                <label htmlFor=\"floatingInput\">프로젝트 내용</label>\r\n            </div>\r\n            <div className=\"form-floating\">\r\n                <input type=\"text\" className=\"form-control\"  placeholder=\"시작 날짜\" defaultValue={startDate} onChange={e => setStartDate(e.target.value)} />\r\n                <label htmlFor=\"floatingInput\">시작 날짜</label>\r\n            </div>\r\n            <div className=\"form-floating\">\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"종료 날짜\" defaultValue={endDate} onChange={e => setEndDate(e.target.value)} />\r\n                <label htmlFor=\"floatingInput\">종료 날짜</label>\r\n            </div>\r\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Basic outlined example\">\r\n                <button className=\"btn btn-outline-primary\" onClick={requestDeleteProject} type=\"button\">삭제</button>\r\n            </div>\r\n        </main>\r\n    );\r\n    \r\n}\r\n\r\n\r\nconst Projects = ({ projectData, editProject, setEditProject, handleEditProjects, isClicked, setIsClicked, setProjectData, sessionId }) => {\r\n    const handleProjectSubmit = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        setIsClicked(prevState => (!prevState));\r\n    }\r\n    const requestAddProject = async (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        await axios.post(BACKEND_URL + '/add/project', {sessionId});\r\n        const res = await axios.post(BACKEND_URL + '/portfolio/main/projects', {sessionId});\r\n            const data = res.data.data.projects;\r\n            setProjectData(data);\r\n        \r\n    }\r\n    return (\r\n        <div className=\"projects-portfolio\">\r\n            <h3>프로젝트</h3>\r\n            {\r\n                editProject ?\r\n                Array.from(projectData).map(project => {\r\n                    return (\r\n                        <div key={`project_${project.id}_edit`}>\r\n                            <EditProject data={project} setEditProject={setEditProject} isClicked={isClicked} sessionId={sessionId} setProjectData={setProjectData} />\r\n                        </div>\r\n                    )\r\n                }) : \r\n                Array.from(projectData).map(project => {\r\n                    return (\r\n                        <div key={`project_${project.id}`}>\r\n                            <h5>{project.project_name}</h5>\r\n                            <h6>{project.project_details}</h6>\r\n                            <p>{project.project_start_date} ~ {project.project_end_date}</p>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            {editProject ?\r\n            <div>\r\n                <div>\r\n                    <div className=\"btn-group\" role=\"group\" aria-label=\"Basic outlined example\">\r\n                        <button className=\"btn btn-outline-primary\" onClick={requestAddProject} type=\"button\">추가</button>\r\n                    </div>\r\n                    <div className=\"btn-group\" role=\"group\" aria-label=\"Basic outlined example\">\r\n                        <button className=\"btn btn-outline-primary\" onClick={handleProjectSubmit} type=\"submit\">완료</button>\r\n                    </div>\r\n                </div>\r\n            </div>:\r\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Basic outlined example\">\r\n                <button className=\"btn btn-outline-primary\" onClick={handleEditProjects} type=\"button\">수정</button>\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default Projects;","import React, {useState} from 'react';\r\nimport axios from \"axios\";\r\nimport {BACKEND_URL} from \"../../Env\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst EditCertificate = ({ data, setEditCertificate, isClicked, sessionId, setCertificateData }) => {\r\n    const [name, setName]   = useState(data.cert_name);\r\n    const [from,setFrom]    = useState(data.cert_from);\r\n    const [date,setDate]    = useState(data.cert_date);\r\n    const certificate_id    = data.id;\r\n\r\n    const requestSaveCertificate = async () => {\r\n        try {\r\n            await axios.post(\r\n                BACKEND_URL + '/edit/certificate',\r\n                { name, from, date, certificate_id }\r\n            );\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    const requestDeleteDertificate = async (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        try {\r\n            await axios.post(\r\n                BACKEND_URL + '/delete/certificate',\r\n                { certificate_id }\r\n            );\r\n            const res = await axios.post(BACKEND_URL + '/portfolio/main/certificates', {sessionId});\r\n            const data = res.data.data.certificates;\r\n            setCertificateData(data);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    if (isClicked){\r\n        requestSaveCertificate();\r\n        setEditCertificate(false);\r\n    }\r\n\r\n    return (\r\n        <main className=\"form-input\">\r\n            <div className=\"form-floating\">\r\n                <input type=\"text\" className=\"form-control\"  placeholder=\"자격증 명\"\r\n                defaultValue={name} onChange={e => setName(e.target.value)} />\r\n                <label htmlFor=\"floatingInput\">자격증 명</label>\r\n            </div>\r\n            <div className=\"form-floating\">\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"제공 기관\"\r\n                defaultValue={from} onChange={e => setFrom(e.target.value)} />\r\n                <label htmlFor=\"floatingInput\">제공 기관</label>\r\n            </div>\r\n            <div className=\"form-floating\">\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"자격증 발급 날짜\" defaultValue={date} onChange={e => setDate(e.target.value)} />\r\n                <label htmlFor=\"floatingInput\">자격증 발급 날짜</label>\r\n            </div>\r\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Basic outlined example\">\r\n                <button className=\"btn btn-outline-primary\"\r\n                onClick={requestDeleteDertificate}\r\n                type=\"button\">삭제</button>\r\n            </div>\r\n        </main>\r\n    );\r\n    \r\n}\r\nconst Certificates = ({ certificateData, editCertificate, setEditCertificate, handleEditCertificates, isClicked, setIsClicked, setCertificateData, sessionId }) => {\r\n    const handleCertificateSubmit = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        setIsClicked(prevState => (!prevState));\r\n    }\r\n    const requestAddCertificate = async (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        await axios.post(BACKEND_URL + '/add/certificate', {sessionId});\r\n        const res = await axios.post(BACKEND_URL + '/portfolio/main/certificates', {sessionId});\r\n            const data = res.data.data.certificates;\r\n            setCertificateData(data);\r\n        \r\n    }\r\n    return (\r\n        <div className=\"certificates-portfolio\">\r\n            <h3>자격증</h3>\r\n            {\r\n                editCertificate ?\r\n                Array.from(certificateData).map(certificate => {\r\n                    return (\r\n                        <div key={`certificate_${certificate.id}_edit`}>\r\n                            <EditCertificate data={certificate} setEditCertificate={setEditCertificate} isClicked={isClicked} setCertificateData={setCertificateData} sessionId={sessionId} />\r\n                        </div>\r\n                    )\r\n                }) : \r\n                Array.from(certificateData).map(certificate => {\r\n                    return (\r\n                        <div key={`certificate_${certificate.id}`}>\r\n                            <h5>{certificate.cert_name}</h5>\r\n                            <h6>{certificate.cert_from}</h6>\r\n                            <p>{certificate.cert_date}</p>\r\n                        </div>\r\n                        \r\n                    )\r\n                })\r\n            }\r\n            {editCertificate ?\r\n            <div>\r\n                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic outlined example\">\r\n                    <button className=\"btn btn-outline-primary\" onClick={requestAddCertificate} type=\"button\">추가</button>\r\n                </div>\r\n                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic outlined example\">\r\n                    <button className=\"btn btn-outline-primary\" onClick={handleCertificateSubmit} type=\"submit\">완료</button>\r\n                </div>\r\n            </div>:\r\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Basic outlined example\">\r\n                <button className=\"btn btn-outline-primary\" onClick={handleEditCertificates} type=\"button\">수정</button>\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default Certificates;","import React, {useState} from 'react';\r\nimport axios from \"axios\";\r\nimport {BACKEND_URL} from \"../../Env\";\r\n\r\nconst EditProfile = ({ data, setEditProfile, isClicked }) => {\r\n    const [name, setName]   = useState(data.name);\r\n    const [comments,setComments]    = useState(data.comments);\r\n    const profile_id    = data.id;\r\n\r\n    const requestSaveProfile = async () => {\r\n        try {\r\n            await axios.post(\r\n                BACKEND_URL + '/edit/profile',\r\n                { name, comments, profile_id }\r\n            );\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    if (isClicked){\r\n        requestSaveProfile();\r\n        setEditProfile(false);\r\n    }\r\n\r\n    return (\r\n        <main className=\"form-input\">\r\n            <div className=\"form-floating\">\r\n                <input type=\"text\" className=\"form-control\"  placeholder=\"이름\" defaultValue={name} onChange={e => setName(e.target.value)} />\r\n                <label htmlFor=\"floatingInput\">이름</label>\r\n            </div>\r\n            <div className=\"form-floating\">\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"한 줄 소개\" defaultValue={comments} onChange={e => setComments(e.target.value)} />\r\n                <label htmlFor=\"floatingInput\">한 줄 소개</label>\r\n            </div>\r\n        </main>\r\n    );\r\n    \r\n}\r\n\r\n\r\nconst Profile = ({ profileData, editProfile, setEditProfile, handleEditProfile, isClicked, setIsClicked }) => {\r\n    const handleProfileSubmit = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        setIsClicked(prevState => (!prevState));\r\n    }\r\n    return (\r\n        <div className=\"awards-portfolio\">\r\n            <h3>프로필</h3>\r\n            {\r\n                editProfile ?\r\n                Array.from(profileData).map(profile => {\r\n                    return (\r\n                        <div key={`profile_${profile.id}_edit`}>\r\n                            <EditProfile data={profile} setEditProfile={setEditProfile} isClicked={isClicked} />\r\n                        </div>\r\n                    )\r\n                }) : \r\n                Array.from(profileData).map(profile => {\r\n                    return (\r\n                        <div key={`profile_${profile.id}`}>\r\n                            <h5>{profile.name}</h5>\r\n                            <p>{profile.comments}</p>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            {editProfile ?\r\n                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic outlined example\">\r\n                    <button className=\"btn btn-outline-primary\" onClick={handleProfileSubmit} type=\"submit\">완료</button>\r\n                </div>:\r\n                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic outlined example\">\r\n                    <button className=\"btn btn-outline-primary\" onClick={handleEditProfile} type=\"button\">수정</button>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default Profile;","import styled from \"styled-components\";\r\n\r\nexport const FullPage = styled.div`\r\nwidth: 100vw;\r\nheight: 100vh;\r\npadding-left: 30px;\r\npadding-right: 40px;\r\n`;\r\nexport const LeftSide = styled.div`\r\nwidth: 28vw;\r\nheight: 100vh;\r\nfloat: left;\r\n`;\r\nexport const RightSide = styled.div`\r\nwidth: 65vw;\r\nheight: 100vh;\r\ndisplay: table;\r\nfloat: right;\r\n`;","import React, { useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport axios from \"axios\";\r\n\r\nimport Awards from \"../components/portfolio/Awards\";\r\nimport Schools from \"../components/portfolio/Schools\";\r\nimport Projects from \"../components/portfolio/Projects\";\r\nimport Certificates from \"../components/portfolio/Certificates\";\r\nimport Profile from \"../components/portfolio/Profile\";\r\nimport { FullPage, LeftSide, RightSide } from '../styles/MainStyle';\r\nimport {BACKEND_URL} from \"../Env\";\r\n\r\nconst Main = ({ sessionId }) => {\r\n    const templateStyle                                     = {width: '60vw'}\r\n    const [awardData, setAwardData]                         = useState({});\r\n    const [schoolData, setSchoolData]                       = useState({});\r\n    const [certificateData, setCertificateData]             = useState({});\r\n    const [projectData, setProjectData]                     = useState({});\r\n    const [profileData, setProfileData]                     = useState({});\r\n\r\n    const [editProfile, setEditProfile]                     = useState(false);\r\n    const [editSchool, setEditSchool]                       = useState(false);\r\n    const [editAward, setEditAward]                         = useState(false);\r\n    const [editProject, setEditProject]                     = useState(false);\r\n    const [editCertificate, setEditCertificate]             = useState(false);\r\n\r\n    const [isSchoolClicked, setIsSchoolClicked]             = useState(false);\r\n    const [isAwardClicked, setIsAwardClicked]               = useState(false);\r\n    const [isCertificateClicked, setIsCertificateClicked]   = useState(false);\r\n    const [isProjectClicked, setIsProjectClicked]           = useState(false);\r\n    const [isProfileClicked, setIsProfileClicked]           = useState(false);\r\n    \r\n    // get Data from Flask\r\n    useEffect(()=>{\r\n        // Default roaded data\r\n        const fetchPortfolio = async () => {\r\n            const res = await axios.post(BACKEND_URL + '/portfolio/main', {sessionId});\r\n            const data = res.data.data.portfolio;\r\n            setAwardData(data.awards);\r\n            setSchoolData(data.schools);\r\n            setCertificateData(data.certificates);\r\n            setProjectData(data.projects);\r\n            setProfileData(data.profile);\r\n        }\r\n        fetchPortfolio();\r\n\r\n        // After edit reroad data\r\n        const fetchProfile = async () => {\r\n            const res = await axios.post(BACKEND_URL + '/portfolio/main/profile', {sessionId});\r\n            const data = res.data.data.profile;\r\n            setProfileData(data);\r\n            setIsProfileClicked(false);\r\n            \r\n        }\r\n        const fetchAwards = async () => {\r\n            const res = await axios.post(BACKEND_URL + '/portfolio/main/awards', {sessionId});\r\n            const data = res.data.data.awards;\r\n            setAwardData(data);\r\n            setIsAwardClicked(false);\r\n        }\r\n        const fetchSchools = async () => {\r\n            const res = await axios.post(BACKEND_URL + '/portfolio/main/schools', {sessionId});\r\n            const data = res.data.data.schools;\r\n            setSchoolData(data);\r\n            setIsSchoolClicked(false);\r\n        }\r\n        const fetchCertificates = async () => {\r\n            const res = await axios.post(BACKEND_URL + '/portfolio/main/certificates', {sessionId});\r\n            const data = res.data.data.certificates;\r\n            setCertificateData(data);\r\n            setIsCertificateClicked(false);\r\n        }\r\n        const fetchProjects = async () => {\r\n            const res = await axios.post(BACKEND_URL + '/portfolio/main/projects', {sessionId});\r\n            const data = res.data.data.projects;\r\n            setProjectData(data);\r\n            setIsProjectClicked(false);\r\n        }\r\n        if(editSchool && isSchoolClicked){\r\n            fetchSchools();\r\n        }\r\n        if(editAward && isAwardClicked){\r\n            fetchAwards();\r\n        }\r\n        if(editCertificate && isCertificateClicked){\r\n            fetchCertificates();\r\n        }\r\n        if(editProfile && isProfileClicked){\r\n            fetchProfile();\r\n        }\r\n        if(editProject && isProjectClicked){\r\n            fetchProjects();\r\n        }\r\n    }, [sessionId, editSchool, editAward, editCertificate, editProfile, editProject, \r\n        setSchoolData, setAwardData, setCertificateData, setProfileData, setProjectData, \r\n        isProjectClicked, isSchoolClicked, isAwardClicked, isProfileClicked, isCertificateClicked,\r\n        setIsProjectClicked, setIsSchoolClicked, setIsAwardClicked, setIsProfileClicked, setIsCertificateClicked]);\r\n\r\n    // Set the \"Edit<->Read\" State's status \r\n    const handleEditProfile         = () => {setEditProfile(prevState => (!prevState))};\r\n    const handleEditAwards          = () => {setEditAward(prevState => (!prevState))};\r\n    const handleEditSchools         = () => {setEditSchool(prevState => (!prevState))};\r\n    const handleEditCertificates    = () => {setEditCertificate(prevState => (!prevState))};\r\n    const handleEditProjects        = () => {setEditProject(prevState => (!prevState))};\r\n    \r\n    return (\r\n        \r\n        <FullPage>\r\n            {sessionId === null && <Redirect to=\"/login\" />}\r\n            <h1 className=\"text-center\">My Portfolio</h1>\r\n            <br />\r\n            <LeftSide>\r\n                <div className=\"card text-center\" style={{width: '28vw'}}>\r\n                    <div className=\"card-body\">\r\n                        <Profile\r\n                        profileData={profileData}\r\n                        editProfile={editProfile}\r\n                        setEditProfile={setEditProfile}\r\n                        handleEditProfile={handleEditProfile}\r\n                        isClicked={isProfileClicked}\r\n                        setIsClicked={setIsProfileClicked} />\r\n                    </div>\r\n                </div>\r\n            </LeftSide>\r\n            <RightSide>\r\n                <div className=\"card text-center\" style={templateStyle}>\r\n                    <div className=\"card-body\">\r\n                        <Schools\r\n                        schoolData={schoolData}\r\n                        editSchool={editSchool}\r\n                        setEditSchool={setEditSchool}\r\n                        handleEditSchools={handleEditSchools}\r\n                        isClicked={isSchoolClicked}\r\n                        setIsClicked={setIsSchoolClicked}\r\n                        setSchoolData={setSchoolData}\r\n                        sessionId={sessionId} />\r\n                    </div>\r\n                </div> \r\n\r\n                <div className=\"card text-center\" style={templateStyle}>\r\n                    <div className=\"card-body\">\r\n                        <Awards\r\n                        awardData={awardData}\r\n                        editAward={editAward}\r\n                        setEditAward={setEditAward}\r\n                        handleEditAwards={handleEditAwards}\r\n                        isClicked={isAwardClicked}\r\n                        setIsClicked={setIsAwardClicked}\r\n                        setAwardData={setAwardData}\r\n                        sessionId={sessionId} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"card text-center\" style={templateStyle}>\r\n                    <div className=\"card-body\">\r\n                        <Projects\r\n                        projectData={projectData}\r\n                        editProject={editProject}\r\n                        setEditProject={setEditProject}\r\n                        handleEditProjects={handleEditProjects}\r\n                        isClicked={isProjectClicked}\r\n                        setIsClicked={setIsProjectClicked}\r\n                        setProjectData={setProjectData}\r\n                        sessionId={sessionId} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"card text-center\" style={templateStyle}>\r\n                    <div className=\"card-body\">\r\n                        <Certificates\r\n                        certificateData={certificateData}\r\n                        editCertificate={editCertificate}\r\n                        setEditCertificate={setEditCertificate}\r\n                        handleEditCertificates={handleEditCertificates}\r\n                        isClicked={isCertificateClicked}\r\n                        setIsClicked={setIsCertificateClicked}\r\n                        setCertificateData={setCertificateData}\r\n                        sessionId={sessionId} />\r\n                    </div>\r\n                </div>\r\n            </RightSide>\r\n        </FullPage>\r\n    );\r\n    \r\n}\r\n\r\nexport default Main;","import React, { useState } from 'react';\r\nimport axios from \"axios\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport {BACKEND_URL} from \"../Env\";\r\n\r\n\r\nconst Signup = () => {\r\n    // 입력값 저장할 state들\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [checkPassword, setCheckPassword] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n\r\n    // redirect 보내기\r\n    const history = useHistory();\r\n    // 백앤드로 데이터 전송 및 응답 받기\r\n    const requestSignUp = async () => {\r\n        try {\r\n            const res = await axios.post(\r\n                BACKEND_URL + '/auth/signup',\r\n                { email, password, checkPassword, name }\r\n            );\r\n            alert(res.data.message);\r\n            if (res.data.result===\"success\") {\r\n                history.push(\"/\");  \r\n            }\r\n            history.push(\"/signup\");   \r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    const handleSignUpSubmit = (e) => {\r\n        e.preventDefault();\r\n        requestSignUp();\r\n    }\r\n\r\n\r\n        return (\r\n            <div className=\"text-center\">\r\n                <main className=\"form-signin\">\r\n                    <form onSubmit={e =>handleSignUpSubmit(e)}>\r\n                        <h1 className=\"h3 mb-3 fw-normal\">Please Sign up</h1>\r\n                        <div className=\"form-floating\">\r\n                            <input type=\"email\" className=\"form-control\" id=\"floatingInput\" placeholder=\"name@example.com\" onChange={e => setEmail(e.target.value)} />\r\n                            <label htmlFor=\"floatingInput\">Email address</label>\r\n                        </div>\r\n                        <div className=\"form-floating\">\r\n                            <input type=\"password\" className=\"form-control\" id=\"floatingPassword\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)} />\r\n                            <label name=\"password\" htmlFor=\"floatingPassword\">Password</label>\r\n                        </div>\r\n                        <div className=\"form-floating\">\r\n                            <input name=\"check_password\" type=\"password\" className=\"form-control\" id=\"floatingPassword\" placeholder=\"Password\" onChange={e => setCheckPassword(e.target.value)} />\r\n                            <label htmlFor=\"floatingPassword\">Check Password</label>\r\n                        </div>\r\n                        <div className=\"form-floating\">\r\n                            <input name=\"name\" type=\"name\" className=\"form-control\" id=\"floatingPassword\" placeholder=\"이름 입력\" onChange={e => setName(e.target.value)} />\r\n                            <label htmlFor=\"floatingInput\">Name</label>\r\n                        </div>\r\n                        <button className=\"w-100 btn btn-lg btn-secondary\" type=\"submit\">Sign up</button>\r\n                        <p className=\"mt-5 mb-3 text-muted\">&copy; 2021 RacerIn Co. all rights reserved.</p>\r\n                    </form>\r\n                </main>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Signup;","import React, { useState, useEffect } from 'react';\r\nimport { Redirect, useHistory  } from 'react-router-dom';\r\nimport { FullPage } from '../styles/MainStyle';\r\nimport axios from \"axios\";\r\nimport { CardGroup, Card, Button } from 'react-bootstrap';\r\nimport {BACKEND_URL} from \"../Env\";\r\n\r\nconst ProfileCard = ({ data, setReadWhos }) => {\r\n    const history = useHistory();\r\n\r\n    const routeChange = () =>{\r\n        setReadWhos(data.user_id);\r\n        history.push('/read_portfolio');\r\n    }\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <Card.Title>{data.name}</Card.Title>\r\n                <Card.Text>{data.comments}</Card.Text>\r\n                <Button variant=\"primary\" onClick={routeChange}>정보보기</Button>\r\n            </Card.Body>\r\n        </Card>\r\n        \r\n    );\r\n}\r\n\r\nconst Network = ({ sessionId, setReadWhos }) => {\r\n    const [serach, setSearch] = useState('');\r\n    const [userData, setUserData] = useState('');\r\n    useEffect(()=>{\r\n        // Default roaded data\r\n        const fetchUser = async () => {\r\n            const res = await axios.post(BACKEND_URL + '/network/search_user', {serach, sessionId});\r\n            const data = res.data.data;\r\n            setUserData(data.users);\r\n        }\r\n        fetchUser();\r\n    },[serach, sessionId, setUserData])\r\n\r\n    return (\r\n        <FullPage>\r\n            {sessionId === null && <Redirect to=\"/login\" />}\r\n            <div className=\"card text-center\">\r\n                <div className=\"input-group mb-3\">\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"이름으로 검색\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\" onChange={e => setSearch(e.target.value)} />\r\n                </div>\r\n                {\r\n                Array.from(userData).map(user => {\r\n                    return (\r\n                        <CardGroup key={`${user.id}_search`}>\r\n                            <ProfileCard data={user} setReadWhos={setReadWhos} />\r\n                        </CardGroup>\r\n                    )\r\n                })\r\n            }\r\n            </div>\r\n        </FullPage>\r\n    );\r\n    \r\n}\r\n\r\nexport default Network;","import React, { useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport { FullPage, LeftSide, RightSide } from '../styles/MainStyle';\r\nimport {BACKEND_URL} from \"../Env\";\r\n\r\n\r\nconst ReadPortfolio = ({ sessionId, readWhos }) => {\r\n    const templateStyle                                     = {width: '60vw'}\r\n    const [awardData, setAwardData]                         = useState({});\r\n    const [schoolData, setSchoolData]                       = useState({});\r\n    const [certificateData, setCertificateData]             = useState({});\r\n    const [projectData, setProjectData]                     = useState({});\r\n    const [profileData, setProfileData]                     = useState({});\r\n    \r\n    // get Data from Flask\r\n    useEffect(()=>{\r\n        // Default roaded data\r\n        const fetchPortfolio = async () => {\r\n            const res = await axios.post(BACKEND_URL + '/portfolio/main', {\"sessionId\": readWhos });\r\n            const data = res.data.data.portfolio;\r\n            setAwardData(data.awards);\r\n            setSchoolData(data.schools);\r\n            setCertificateData(data.certificates);\r\n            setProjectData(data.projects);\r\n            setProfileData(data.profile);\r\n        }\r\n        fetchPortfolio();\r\n\r\n    }, [readWhos, setSchoolData, setAwardData, setCertificateData, setProfileData, setProjectData]);\r\n\r\n    return (\r\n        \r\n        <FullPage>\r\n            {sessionId === null && <Redirect to=\"/login\" />}\r\n            <h1 className=\"text-center\">My Protfolio</h1>\r\n            <br />\r\n            <LeftSide>\r\n                <div className=\"card text-center\" style={{width: '28vw'}}>\r\n                    <div className=\"card-body\">\r\n                        <h3>프로필</h3>\r\n                        {\r\n                            Array.from(profileData).map(profile => {\r\n                            return (\r\n                                <div key={`profile_${profile.id}`}>\r\n                                    <h5>{profile.name}</h5>\r\n                                    <p>{profile.comments}</p>\r\n                                </div>\r\n                            )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </LeftSide>\r\n            <RightSide>\r\n                <div className=\"card text-center\" style={templateStyle}>\r\n                    <div className=\"card-body\">\r\n                        <h3>학력</h3>\r\n                        {\r\n                            Array.from(schoolData).map(school => {\r\n                                return (\r\n                                    <div key={`school_${school.id}_read`}>\r\n                                        <h5>{school.name}</h5>\r\n                                        <h6>{school.major}</h6>\r\n                                        <p>{school.status}</p>\r\n                                    </div>\r\n                                    \r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div> \r\n\r\n                <div className=\"card text-center\" style={templateStyle}>\r\n                    <div className=\"card-body\">\r\n                        <h3>수상이력</h3>\r\n                        {\r\n                            Array.from(awardData).map(award => {\r\n                                return (\r\n                                    <div key={`award_${award.id}`}>\r\n                                        <h5>{award.awards}</h5>\r\n                                        <p>{award.awards_details}</p>\r\n                                    </div>\r\n                                    \r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"card text-center\" style={templateStyle}>\r\n                    <div className=\"card-body\">\r\n                        <h3>프로젝트</h3>\r\n                        {\r\n                            Array.from(projectData).map(project => {\r\n                                return (\r\n                                    <div key={`project_${project.id}`}>\r\n                                        <h5>{project.project_name}</h5>\r\n                                        <h6>{project.project_details}</h6>\r\n                                        <p>{project.project_start_date} ~ {project.project_end_date}</p>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"card text-center\" style={templateStyle}>\r\n                    <div className=\"card-body\">\r\n                        <h3>자격증</h3>\r\n                        {\r\n                            Array.from(certificateData).map(certificate => {\r\n                                return (\r\n                                    <div key={`certificate_${certificate.id}`}>\r\n                                        <h5>{certificate.cert_name}</h5>\r\n                                        <h6>{certificate.cert_from}</h6>\r\n                                        <p>{certificate.cert_date}</p>\r\n                                    </div>\r\n                                    \r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </RightSide>\r\n        </FullPage>\r\n    );\r\n    \r\n}\r\n\r\nexport default ReadPortfolio;","import React from 'react';\r\nimport Image from 'react-bootstrap/Image'\r\n\r\nconst NotFound = () => {\r\n    \r\n    return (\r\n            <div style={{textAlign: 'center'}}>\r\n                <Image src=\"https://cdn.dribbble.com/users/458522/screenshots/2835756/dribbbler_error_404_white.jpg\" fluid />\r\n            </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default NotFound;","\nimport React, {useState} from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\n\nimport Header from \"./components/Header\";\nimport Login from \"./pages/Login\";\nimport Main from \"./pages/Main\";\nimport Signup from \"./pages/Signup\";\nimport Network from \"./pages/Network\";\nimport ReadPortfolio from \"./pages/ReadPortfolio\";\nimport NotFound from \"./pages/NotFound\";\n\nconst App = () => {\n  const [sessionId, setSessionId] = useState(window.sessionStorage.getItem(\"id\"));\n  const [readWhos, setReadWhos] = useState(null);\n      return (\n          <div>\n            <BrowserRouter>\n              <Header sessionId={sessionId} setSessionId={setSessionId} />\n              <br />\n              <Switch>\n                <Route exact path=\"/\"><Main sessionId={sessionId} /></Route>\n                <Route exact path=\"/login\"><Login setSessionId={setSessionId} /></Route>\n                <Route exact path=\"/signup\"><Signup /></Route>\n                <Route exact path=\"/network\"><Network sessionId={sessionId} setReadWhos={setReadWhos} /></Route>\n                <Route exact path=\"/read_portfolio\"><ReadPortfolio sessionId={sessionId} readWhos={readWhos} /></Route>\n                <Route path=\"/\"><NotFound /></Route>\n\n              </Switch>\n            </BrowserRouter>\n          </div>\n      );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}